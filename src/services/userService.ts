import { supabase } from './supabase';

export interface UpdateUserPhotoResult {
  success: boolean;
  error?: string;
  photoUrl?: string;
}

/**
 * Atualiza a foto de perfil do usu√°rio no Supabase
 * @param userId ID do usu√°rio
 * @param photoBase64 Foto em formato base64
 * @returns Resultado da opera√ß√£o
 */
export const updateUserPhoto = async (userId: string, photoBase64: string): Promise<UpdateUserPhotoResult> => {
  try {
    console.log('üì∏ Iniciando atualiza√ß√£o da foto do usu√°rio:', userId);

    // Validar se o base64 est√° no formato correto
    if (!photoBase64.startsWith('data:image/')) {
      return {
        success: false,
        error: 'Formato de imagem inv√°lido. Use base64 com prefixo data:image/'
      };
    }

    // Atualizar a foto no banco de dados
    const { data, error } = await supabase
      .from('usuario')
      .update({ 
        url_foto: photoBase64,
        dt_edicao: new Date().toISOString()
      })
      .eq('id', parseInt(userId))
      .select()
      .single();

    if (error) {
      console.error('‚ùå Erro ao atualizar foto no Supabase:', error);
      return {
        success: false,
        error: `Erro ao salvar foto: ${error.message}`
      };
    }

    console.log('‚úÖ Foto atualizada com sucesso no Supabase');

    return {
      success: true,
      photoUrl: photoBase64
    };

  } catch (error) {
    console.error('üí• Erro inesperado ao atualizar foto:', error);
    return {
      success: false,
      error: 'Erro inesperado ao atualizar foto. Tente novamente.'
    };
  }
};

/**
 * Busca informa√ß√µes atualizadas do usu√°rio
 * @param userId ID do usu√°rio
 * @returns Dados do usu√°rio ou erro
 */
export const getUserInfo = async (userId: string) => {
  try {
    const { data: user, error } = await supabase
      .from('usuario')
      .select('*')
      .eq('id', parseInt(userId))
      .single();

    if (error) {
      console.error('‚ùå Erro ao buscar usu√°rio:', error);
      return { data: null, error: error.message };
    }

    return { data: user, error: null };
  } catch (error) {
    console.error('üí• Erro inesperado ao buscar usu√°rio:', error);
    return { data: null, error: 'Erro inesperado ao buscar dados do usu√°rio' };
  }
}; 