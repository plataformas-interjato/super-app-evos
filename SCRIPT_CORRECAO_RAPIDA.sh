#!/bin/bash

# üö® SCRIPT DE CORRE√á√ÉO URGENTE PARA PHOTOCOLLECTIONSCREEN
# Este script corrige todas as fun√ß√µes que ainda usam AsyncStorage

echo "üîß Iniciando corre√ß√£o do PhotoCollectionScreen..."

# Fazer backup do arquivo original
cp src/screens/PhotoCollectionScreen.tsx src/screens/PhotoCollectionScreen.tsx.backup

# CORRE√á√ÉO 1: Remover blocos AsyncStorage restantes da takePhoto
sed -i '/\/\/ 2\. Criar a√ß√£o no offline_actions APENAS COM URI/,/await AsyncStorage\.setItem(actionKey, JSON\.stringify(existingActions));/d' src/screens/PhotoCollectionScreen.tsx

# CORRE√á√ÉO 2: Remover blocos AsyncStorage da takePhotoFromModal  
sed -i '/\/\/ 2\. Criar a√ß√£o no offline_actions APENAS COM URI/,/console\.log.*Foto ser√° convertida para base64 apenas durante sincroniza√ß√£o/d' src/screens/PhotoCollectionScreen.tsx

# CORRE√á√ÉO 3: Substituir takeExtraPhoto AsyncStorage
sed -i '/console\.log.*Salvando foto extra URI direto no AsyncStorage/,/console\.log.*Foto ser√° convertida para base64 apenas durante sincroniza√ß√£o/c\
        console.log("üíæ Salvando foto extra no sistema unificado (FileSystem)...");\
        \
        try {\
          const { default: unifiedOfflineDataService } = await import("../services/unifiedOfflineDataService");\
          \
          const result = await unifiedOfflineDataService.saveDadosRecord(\
            workOrder.id,\
            user.id.toString(),\
            extraEntry.stepId, // Usar stepId como entradaDadosId\
            photoUri\
          );\
          \
          if (result.success) {\
            console.log("‚úÖ Foto extra salva no sistema unificado");\
            \
            setExtraPhotoEntries(prev => ({\
              ...prev,\
              [extraEntry.stepId]: prev[extraEntry.stepId].map(entry => \
                entry.id === extraEntry.id ? { ...entry, photoUri: photoUri } : entry\
              )\
            }));\
          } else {\
            console.error("‚ùå Erro ao salvar foto extra:", result.error);\
            Alert.alert("Erro", "N√£o foi poss√≠vel salvar a foto extra.");\
          }\
        } catch (unifiedError) {\
          console.error("‚ùå Erro no sistema unificado:", unifiedError);\
          Alert.alert("Erro", "Erro interno ao salvar foto extra.");\
        }' src/screens/PhotoCollectionScreen.tsx

# CORRE√á√ÉO 4: Substituir takeExtraPhotoFromModal AsyncStorage
sed -i '/console\.log.*Salvando foto extra via modal URI direto no AsyncStorage/,/console\.log.*Foto ser√° convertida para base64 apenas durante sincroniza√ß√£o/c\
        console.log("üíæ Salvando foto extra via modal no sistema unificado (FileSystem)...");\
        \
        try {\
          const { default: unifiedOfflineDataService } = await import("../services/unifiedOfflineDataService");\
          \
          const result = await unifiedOfflineDataService.saveDadosRecord(\
            workOrder.id,\
            user.id.toString(),\
            selectedExtraEntry.stepId,\
            photoUri\
          );\
          \
          if (result.success) {\
            console.log("‚úÖ Foto extra via modal salva no sistema unificado");\
            \
            setExtraPhotoEntries(prev => ({\
              ...prev,\
              [selectedExtraEntry.stepId]: prev[selectedExtraEntry.stepId].map(entry => \
                entry.id === selectedExtraEntry.id ? { ...entry, photoUri: photoUri } : entry\
              )\
            }));\
          } else {\
            console.error("‚ùå Erro ao salvar foto extra via modal:", result.error);\
            Alert.alert("Erro", "N√£o foi poss√≠vel salvar a foto extra.");\
          }\
        } catch (unifiedError) {\
          console.error("‚ùå Erro no sistema unificado:", unifiedError);\
          Alert.alert("Erro", "Erro interno ao salvar foto extra.");\
        }' src/screens/PhotoCollectionScreen.tsx

echo "‚úÖ Corre√ß√µes aplicadas com sucesso!"
echo "üìã Backup salvo em: src/screens/PhotoCollectionScreen.tsx.backup"
echo "üß™ Execute os testes de valida√ß√£o conforme CORRECAO_PHOTO_COLLECTION_COMPLETA.md" 